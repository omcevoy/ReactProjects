[{"/Users/Owen/Documents/webdev/commerceSite/commerce/src/index.js":"1","/Users/Owen/Documents/webdev/commerceSite/commerce/src/App.js":"2","/Users/Owen/Documents/webdev/commerceSite/commerce/src/context/GlobalState.js":"3","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Layout/Footer.js":"4","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Layout/Navbar.js":"5","/Users/Owen/Documents/webdev/commerceSite/commerce/src/context/AppReducer.js":"6","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Cart/ShoppingCart.js":"7","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/ProductGrid/ProductGrid.js":"8","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/ProductGrid/ProductCard.js":"9","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Cart/CartItem.js":"10","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Filters/Filters.js":"11","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Filters/FilterList.js":"12","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Filters/PriceList.js":"13","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/ProductGrid/ProductDialog.js":"14"},{"size":219,"mtime":1608577905341,"results":"15","hashOfConfig":"16"},{"size":512,"mtime":1609352935855,"results":"17","hashOfConfig":"16"},{"size":2138,"mtime":1609870595653,"results":"18","hashOfConfig":"16"},{"size":862,"mtime":1609870660354,"results":"19","hashOfConfig":"16"},{"size":850,"mtime":1608766357074,"results":"20","hashOfConfig":"16"},{"size":1565,"mtime":1609870461891,"results":"21","hashOfConfig":"16"},{"size":3139,"mtime":1609870652648,"results":"22","hashOfConfig":"16"},{"size":2928,"mtime":1609871588258,"results":"23","hashOfConfig":"16"},{"size":1736,"mtime":1609368390567,"results":"24","hashOfConfig":"16"},{"size":1770,"mtime":1608833270500,"results":"25","hashOfConfig":"16"},{"size":2697,"mtime":1609353241282,"results":"26","hashOfConfig":"16"},{"size":2203,"mtime":1609352895898,"results":"27","hashOfConfig":"16"},{"size":1225,"mtime":1609870574777,"results":"28","hashOfConfig":"16"},{"size":4298,"mtime":1609785519500,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1a33pba",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"/Users/Owen/Documents/webdev/commerceSite/commerce/src/index.js",[],["64","65"],"/Users/Owen/Documents/webdev/commerceSite/commerce/src/App.js",[],"/Users/Owen/Documents/webdev/commerceSite/commerce/src/context/GlobalState.js",[],"/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Layout/Footer.js",[],"/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Layout/Navbar.js",[],"/Users/Owen/Documents/webdev/commerceSite/commerce/src/context/AppReducer.js",["66","67"],"/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Cart/ShoppingCart.js",["68"],"/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/ProductGrid/ProductGrid.js",["69"],"/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/ProductGrid/ProductCard.js",["70","71","72","73","74","75","76"],"import React, { useContext}  from 'react';\nimport { GlobalContext } from '../../context/GlobalState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginTop: 50,\n    marginLeft: 25\n  }\n});\n\nexport default function ProductCard(props) {\n  const {product, onClick} = props;\n  const classes = useStyles();\n \n  return (\n      <Card className={classes.root} onClick = {onClick}>\n        <CardActionArea>\n          <CardMedia alt = {product.name} component = 'img' height = '300' src = {product.imageUrl}/>\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {product.name}\n            </Typography>\n             {product.quantity < 10 ? (\n                                      <Typography variant=\"body2\" style = {{color : 'red'}} component=\"p\">\n                                          Only {product.quantity} left!\n                                      </Typography>) : ( <br /> )}\n          </CardContent>\n          <Typography variant = 'h3' component = 'h1'>\n            ${product.price}\n          </Typography>\n        </CardActionArea>\n      </Card>\n  );\n}","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Cart/CartItem.js",["77","78","79"],"import React, {useState, useContext}  from 'react';\nimport { GlobalContext } from '../../context/GlobalState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport RemoveShoppingCartIcon from '@material-ui/icons/RemoveShoppingCart';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles({\n    root: {\n      maxHeight: 125,\n      marginTop: 5\n    },\n    removeBtn: {\n        left: '80%',\n        marginTop: -25\n    },\n    cartText: {\n        fontSize: '1.5em'\n    }\n  });\n\nexport default function CartItem (props) {\n    const {product} = props;\n    const {RemoveFromCart} = useContext(GlobalContext);\n    const classes = useStyles();\n\n    const handleRemove = () => {\n        RemoveFromCart(product)\n    }\n\n    return (\n        <Card className = {classes.root}>\n            <CardActionArea>\n                <CardContent>\n                    <Typography variant = 'h5' component = 'h5' className = {classes.cartText}>\n                        {product.name}\n                    </Typography>\n                </CardContent>\n                <Tooltip title = 'Remove from cart'>\n                    <IconButton tip = 'Remove from cart' onClick = {handleRemove} className = {classes.removeBtn}>\n                        <RemoveShoppingCartIcon />\n                    </IconButton>\n                </Tooltip>\n            </CardActionArea>\n        </Card>\n    )\n}","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Filters/Filters.js",["80"],"import React, { useContext}  from 'react';\nimport { GlobalContext } from '../../context/GlobalState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FilterList from './FilterList';\nimport PriceList from './PriceList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}));\n\nexport default function Filters() {\n  const {products} = useContext(GlobalContext);\n  let companies = products.map((product) => (product.company))\n  let types = products.map((product) => (product.type))\n  const classes = useStyles();\n\n\n  return (\n    <div className = {classes.root}>\n      <Accordion default>\n        <AccordionSummary expandIcon = {<ExpandMoreIcon />} aria-controls = 'panel1c-content' id = 'panel1c-header'>\n          <div className = {classes.column} />\n            \n          <div className={classes.column}>\n            <Typography className={classes.secondaryHeading}>Filters</Typography>\n          </div>\n        </AccordionSummary>\n        <AccordionDetails className = {classes.details}>\n          <div className = {classes.column}>\n            <Typography className={classes.secondaryHeading}>Company</Typography>\n            <FilterList filterChoices = {companies} filterType = 'company'/>\n          </div>\n          <divider />\n          <div className = {classes.column}>\n            <Typography className={classes.secondaryHeading}>Product Type</Typography>\n            <FilterList filterChoices = {types} filterType = 'type'/>\n          </div>\n          <divider />\n          <div className = {classes.column}>\n            <Typography className={classes.secondaryHeading}>Price</Typography>\n            <PriceList />\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Filters/FilterList.js",["81","82","83"],"import React, { useContext}  from 'react';\nimport { GlobalContext } from '../../context/GlobalState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\nexport default function FilterList(props) {\n    const {filterChoices, filterType} = props;\n    const {AddToCompFilters, RemoveFromCompFilters, AddToTypeFilters, RemoveFromTypeFilters} = useContext(GlobalContext);\n\n    const [checked, setChecked] = React.useState([0]);\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n          filterType === 'company' ? (AddToCompFilters(value)) : (AddToTypeFilters(value));\n        } else {\n          newChecked.splice(currentIndex, 1);\n          filterType === 'company' ? (RemoveFromCompFilters(value)) : (RemoveFromTypeFilters(value));\n        }\n    \n        setChecked(newChecked);\n      };\n    \n    let uniqueChoices = filterChoices.filter(function(item, pos) {\n      return filterChoices.indexOf(item) == pos;\n    })\n\n    function capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    \n    let listMarkup = uniqueChoices.map((choice, index) => (\n        <ListItem key = {index} role = {undefined} dense button onClick={handleToggle(choice)}>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(choice) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': index }}\n              />\n            </ListItemIcon>\n            <ListItemText primary={capitalizeFirstLetter(choice)} />\n        </ListItem>\n    ))\n    return listMarkup;\n}","/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/Filters/PriceList.js",["84"],"/Users/Owen/Documents/webdev/commerceSite/commerce/src/components/ProductGrid/ProductDialog.js",["85"],"import React, {useContext} from 'react';\nimport {GlobalContext} from '../../context/GlobalState'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport ProductCard from './ProductCard';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex'\n    },\n    image: {\n        height: 500, \n    },\n    formControl: {\n        minWidth: 120,\n    },\n    title: {\n        fontSize: '2.25em'\n    },\n    price: {\n        marginLeft: 10,\n    },\n    cartButton: {\n       marginTop: 12,\n       fontSize: 16,\n    },\n    menuPaper: {\n        maxHeight: 200,\n        fontSize: 16\n    }\n  });\n\nexport default function ProductDialog(props) {\n    const {product} = props;\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [sizeOpen, setSizeOpen] = React.useState(false);\n    const [size, setSize] = React.useState('');\n    const {AddToCart} = useContext(GlobalContext);\n\n    const handleAdd = () => {\n        AddToCart(product)\n      }\n    const handleClick = () => {\n        setOpen(true);\n      };\n    \n    const handleSizeChange = (event) => {\n        setSize(event.target.value);\n    }\n    const handleSizeOpen = () => {\n        setSizeOpen(true)\n    }\n    const handleSizeClose = () => {\n        setSizeOpen(false)\n    }\n      const handleClose = () => {\n          setOpen(false)\n      };\n    let selectSize = product.sizes.map((size, index) => (\n        <MenuItem value = {size} key = {index}>{size}</MenuItem>\n    ))\n    return (\n        <div className = {classes.root}>\n            <ProductCard product = {product} onClick = {handleClick} /> \n            <Dialog open = {open} onClose = {handleClose} fullWidth = {true} maxWidth = {'sm'}>\n                <DialogTitle>\n                    <Typography variant = 'h2' className = {classes.title}>\n                        {product.name}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <Grid container spacing = {1} justify = 'center'>\n                        <Grid item align = 'center'>\n                             <img src = {product.imageUrl} className = {classes.image} />\n                        </Grid>\n                    </Grid> \n                </DialogContent>\n                <DialogActions dividers>\n                    <Grid container justify = 'center' spacing = {2}>\n                        <Grid item xs className = {classes.price}>\n                             <Typography variant = 'h3' color = 'textSecondary'>\n                                    ${product.price}\n                                </Typography>\n                        </Grid>\n                        <Grid item align = 'center' xs>\n                            <FormControl className = {classes.formControl}>\n                                <InputLabel>Select Size</InputLabel>\n                                <Select open = {sizeOpen} onClose = {handleSizeClose} onOpen = {handleSizeOpen} \n                                        value = {size} onChange = {handleSizeChange} MenuProps = { { classes : {paper: classes.menuPaper} }}>\n                                    <MenuItem value = \"\"/>\n                                    {selectSize}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item align = 'center' xs>\n                            <Button variant = 'outlined' onClick = {handleAdd} className = {classes.cartButton}>\n                                Add to Cart\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </DialogActions>\n            </Dialog>\n        </div>\n        \n    )\n}\n\n\n",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":3,"column":1,"nodeType":"96","endLine":53,"endColumn":2},{"ruleId":"90","severity":1,"message":"97","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":24},{"ruleId":"98","severity":1,"message":"99","line":19,"column":40,"nodeType":"100","endLine":19,"endColumn":42,"suggestions":"101"},{"ruleId":"90","severity":1,"message":"102","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":27},{"ruleId":"90","severity":1,"message":"103","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":23},{"ruleId":"90","severity":1,"message":"104","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":19},{"ruleId":"90","severity":1,"message":"105","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":14},{"ruleId":"90","severity":1,"message":"106","line":11,"column":8,"nodeType":"92","messageId":"93","endLine":11,"endColumn":27},{"ruleId":"90","severity":1,"message":"107","line":12,"column":8,"nodeType":"92","messageId":"93","endLine":12,"endColumn":18},{"ruleId":"90","severity":1,"message":"108","line":13,"column":8,"nodeType":"92","messageId":"93","endLine":13,"endColumn":15},{"ruleId":"90","severity":1,"message":"97","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":24},{"ruleId":"90","severity":1,"message":"104","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":19},{"ruleId":"90","severity":1,"message":"109","line":11,"column":8,"nodeType":"92","messageId":"93","endLine":11,"endColumn":17},{"ruleId":"90","severity":1,"message":"110","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":24},{"ruleId":"90","severity":1,"message":"111","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":12},{"ruleId":"90","severity":1,"message":"112","line":10,"column":7,"nodeType":"92","messageId":"93","endLine":10,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":40,"column":42,"nodeType":"115","messageId":"116","endLine":40,"endColumn":44},{"ruleId":"90","severity":1,"message":"117","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":85,"column":30,"nodeType":"120","endLine":85,"endColumn":90},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetProducts'. Either include it or remove the dependency array.","ArrayExpression",["123"],"'useContext' is defined but never used.","'GlobalContext' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'AddShoppingCartIcon' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'CardMedia' is defined but never used.","'AccordionActions' is defined but never used.","'List' is defined but never used.","'useStyles' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormLabel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [GetProducts]",{"range":"126","text":"127"},[595,597],"[GetProducts]"]